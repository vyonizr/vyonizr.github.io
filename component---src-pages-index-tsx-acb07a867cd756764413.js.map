{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["BlogIndex","posts","data","allMarkdownRemark","edges","title","map","node","frontmatter","fields","slug","key","style","boxShadow","to","link","className","description","dangerouslySetInnerHTML","__html","date","timeToRead","pageQuery","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","url","this"],"mappings":"mNAyEeA,UAzCG,SAAC,GAA8B,IACzCC,EADyC,EAA5BC,KACAC,kBAAkBC,MAErC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACVJ,EAAMK,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNF,EAAQE,EAAKC,YAAYH,OAASE,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,4BACE,kBAAC,OAAD,CAAME,MAAO,CAAEC,UAAW,QAAUC,GAAIP,EAAKE,OAAOC,MACjDL,EAECE,EAAKC,YAAYO,MACf,0BAAMC,UAAU,cAAhB,QAMNT,EAAKC,YAAYS,aACf,iCACE,uBAAGD,UAAU,mBACXE,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYS,gBAMnC,+BAASV,EAAKC,YAAYY,KAA1B,MAAyCb,EAAKc,WAA9C,oBAWP,IAAMC,EAAY,c,uBC3EzB,IAAIC,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOR,EAAQG,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQT,EAAM,UAAY,KACtFQ,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKZ,GACfJ,EAAQA,EAAQkB,EAAIlB,EAAQmB,EAAIlB,GAAM,WACpC,IAAImB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,kCCfhB,EAAQ,OAAR,CAA0B,QAAQ,SAAUb,GAC1C,OAAO,SAAcoB,GACnB,OAAOpB,EAAWqB,KAAM,IAAK,OAAQD","file":"component---src-pages-index-tsx-acb07a867cd756764413.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n          link: string\n        }\n        fields: {\n          slug: string\n        }\n        timeToRead: number\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data }: PageProps<Data>) => {\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3>\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                  {\n                    node.frontmatter.link && (\n                      <span className=\"link-arrow\"> &rarr;</span>\n                    )\n                  }\n                </Link>\n              </h3>\n              {\n                node.frontmatter.description && (\n                  <section>\n                    <p className=\"post-description\"\n                      dangerouslySetInnerHTML={{\n                        __html: node.frontmatter.description,\n                      }}\n                    />\n                  </section>\n                )\n              }\n              <small>{ node.frontmatter.date } &#183; {node.timeToRead} min read</small>\n            </header>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            link\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}