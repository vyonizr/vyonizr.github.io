{"version":3,"sources":["webpack:///./src/pages/archive.tsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["Archive","posts","data","allMarkdownRemark","edges","swapToMonthYear","YearMonth","split","reverse","join","title","className","map","index","node","previous","Fragment","key","frontmatter","date","to","fields","slug","link","archiveQuery","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","length","url","this"],"mappings":"gOA6EeA,UA1CC,SAAC,GAA8B,IACvCC,EADuC,EAA5BC,KACEC,kBAAkBC,MAE/BC,EAAkB,SAACC,GACvB,OAAOA,EAAUC,MAAM,KAAKC,UAAUC,KAAK,MAG7C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,YACX,6BAASC,UAAU,QACjB,wBAAIA,UAAU,cAAd,WACA,yBAAKA,UAAU,QAEXV,EAAMW,KAAI,WAAqBC,GAArB,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACR,kBAAC,IAAMC,SAAP,CAAgBC,IAAKJ,GAEhBE,EAGCV,EAAgBS,EAAKI,YAAYC,QAAUd,EAAgBU,EAASG,YAAYC,OAC9E,4BAAI,+BAASL,EAAKI,YAAYC,OAHhC,4BAAI,+BAASL,EAAKI,YAAYC,OAOlC,kBAAC,OAAD,CAAMC,GAAKN,EAAKO,OAAOC,MAASR,EAAKI,YAAYR,MAE/CI,EAAKI,YAAYK,MACf,0BAAMZ,UAAU,cAAhB,OAIJ,qCAYT,IAAMa,EAAe,c,uBC/E5B,IAAIC,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOR,EAAQG,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQT,EAAM,UAAY,KACtFQ,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKZ,GACfJ,EAAQA,EAAQkB,EAAIlB,EAAQmB,EAAIlB,GAAM,WACpC,IAAImB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKtC,MAAM,KAAKwC,OAAS,KAC7D,SAAUL,K,kCCfhB,EAAQ,OAAR,CAA0B,QAAQ,SAAUb,GAC1C,OAAO,SAAcmB,GACnB,OAAOnB,EAAWoB,KAAM,IAAK,OAAQD","file":"component---src-pages-archive-tsx-69ae07d2688f91f1f549.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      previous: {\n        frontmatter: {\n          title: string\n          date: string\n        }\n      }\n      node: {\n        frontmatter: {\n          title: string\n          date: string\n          link: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst Archive = ({ data }: PageProps<Data>) => {\n  const posts = data.allMarkdownRemark.edges\n\n  const swapToMonthYear = (YearMonth: String) => {\n    return YearMonth.split(' ').reverse().join(' ')\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Archive\" />\n      <article className=\"page\">\n        <h1 className=\"page-title\">Archive</h1>\n        <div className=\"post\">\n          {\n            posts.map(({ node, previous }, index) => (\n              <React.Fragment key={index}>\n                {\n                  !previous ? (\n                    <h3><small>{ node.frontmatter.date }</small></h3>\n                  ) : (\n                    swapToMonthYear(node.frontmatter.date) !== swapToMonthYear(previous.frontmatter.date) && (\n                      <h3><small>{ node.frontmatter.date }</small></h3>\n                    )\n                  )\n                }\n                <Link to={ node.fields.slug }>{ node.frontmatter.title }\n                {\n                  node.frontmatter.link && (\n                    <span className=\"link-arrow\"> &rarr;</span>\n                  )\n                }\n                </Link>\n                <br/>\n              </React.Fragment>\n            ))\n          }\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport default Archive\n\nexport const archiveQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        previous {\n          frontmatter {\n            title\n            date(formatString: \"MMMM Y\")\n          }\n        }\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMMM Y\")\n            link\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}